# MonetizeG Environment Variables
# This is an example configuration file for the MonetizeG application
# Copy this file to .env and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection string (required)
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE
DATABASE_URL="postgresql://postgres:password@localhost:5432/monetizeg"

# =============================================================================
# AUTHENTICATION - CLERK
# =============================================================================
# Clerk API keys (required)
# Get these from your Clerk dashboard: https://dashboard.clerk.dev/
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_...
CLERK_SECRET_KEY=sk_test_...

# Clerk URLs (required)
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/dashboard

# =============================================================================
# SECURITY - ENCRYPTION
# =============================================================================
# Encryption key for sensitive data (GitHub tokens, etc.)
# REQUIRED FOR PRODUCTION: Must be a 32-byte (256-bit) key
# 
# To generate a secure key, run one of these commands:
# - Node.js: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# - OpenSSL: openssl rand -hex 32
# - Linux:   hexdump -n 32 -e '8/4 "%08X" 1 "\n"' /dev/urandom
#
# WARNING: If this key is lost, all encrypted data will be unrecoverable!
# WARNING: If this key changes, all previously encrypted data will be inaccessible!
ENCRYPTION_KEY=replace_with_32_byte_hex_string_for_production_use

# =============================================================================
# PAYMENT PROCESSING - STRIPE
# =============================================================================
# Stripe API keys (required for payment features)
# Get these from your Stripe dashboard: https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY=sk_test_...
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_...

# Stripe webhook secret for verifying webhook events
# Get this when setting up your webhook endpoint in the Stripe dashboard
STRIPE_WEBHOOK_SECRET=whsec_...

# =============================================================================
# GITHUB INTEGRATION
# =============================================================================
# GitHub OAuth App credentials (required for GitHub integration)
# Create an OAuth app at: https://github.com/settings/developers
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret
GITHUB_CALLBACK_URL=http://localhost:3000/api/github/callback

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
# Base URL of your application (used for callbacks and absolute URLs)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Node environment: development, test, or production
NODE_ENV=development

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
# For production deployment:
# 1. Use real API keys, not test keys
# 2. Set NODE_ENV=production
# 3. Generate a strong ENCRYPTION_KEY using the methods above
# 4. Use HTTPS URLs for all external-facing endpoints
# 5. Set up proper webhook endpoints for Clerk and Stripe
